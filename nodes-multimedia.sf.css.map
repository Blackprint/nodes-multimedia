{"version":3,"sources":["nodes-multimedia.sf.css","src/Display/Video.sf","src/Audio/Input/Microphone.sf"],"names":[],"mappings":"AACA,sC,CCqBA,sB,CDlBA,mC,CCkBA,W,CAKI,a,CACA,6B,CACA,iB,CDlBJ,6C,CEWA,e,CAEI,oB","file":"nodes-multimedia.sf.css","sourcesContent":["/* MIT Licensed */\nbpic-multimedia-display-video .content {\n  margin-top: 0 !important; }\n\nbpic-multimedia-display-video video {\n  width: 280px;\n  display: block;\n  border-bottom: 1px dashed white;\n  margin-bottom: 2px; }\n\n\nbpic-multimedia-audio-input-microphone select {\n  max-width: 100px;\n  margin: 1px 0 5px 5px; }\n\n\n\n/*# sourceMappingURL=nodes-multimedia.sf.css.map */","## html\n<div class=\"node\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\n  <sf-template path=\"Blackprint/nodes/template/routes.sf\"></sf-template>\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\n\n  <div class=\"content\">\n    <video crossorigin=\"anonymous\"></video>\n\n    <div class=\"left-port\">\n      <sf-template path=\"Blackprint/nodes/template/input-port.sf\"></sf-template>\n    </div>\n\n    <div class=\"right-port\">\n      <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\n    </div>\n  </div>\n\n  <sf-template path=\"Blackprint/nodes/template/other.sf\"></sf-template>\n</div>\n\n## scss-global\nbpic-multimedia-display-video {\n  .content{\n    margin-top: 0 !important;\n  }\n  video{\n    width: 280px;\n    display: block;\n    border-bottom: 1px dashed white;\n    margin-bottom: 2px;\n  }\n}\n\n## js-global\nBlackprint.Sketch.registerInterface('BPIC/Multimedia/Display/Video',\nclass VideoSketch extends Context.IFace.Video {\n  init(el){\n    this.videoElement = this.$el('video');\n    super.init(el);\n  }\n\n  initClone(el){\n    // This will refresh and retrigger play for each element\n    this.videoElement = this.$el('video');\n  }\n\n\thotReloadedHTML(){ this.initClone() }\n});\n","## html\n<div class=\"node input\" style=\"transform: translate({{ x }}px, {{ y }}px)\">\n  <sf-template path=\"Blackprint/nodes/template/routes.sf\"></sf-template>\n  <sf-template path=\"Blackprint/nodes/template/header.sf\"></sf-template>\n  \n  <div class=\"content\">\n    <select sf-bind=\"selected\">\n      <option value=\"{{val.i}}\" sf-each=\"val in devices\">\n        {{val.label}}\n      </option>\n    </select>\n    \n    <div class=\"right-port\">\n      <sf-template path=\"Blackprint/nodes/template/output-port.sf\"></sf-template>\n    </div>\n  </div>\n  \n  <sf-template path=\"Blackprint/nodes/template/other.sf\"></sf-template>\n</div>\n\n## scss-global\nbpic-multimedia-audio-input-microphone {\n  select{\n    max-width: 100px;\n    margin: 1px 0 5px 5px;\n  }\n}\n\n## js-global\n// Sketch Interface-> BPIC/Multimedia/Audio/Input/Microphone\n// This will extend the original interface, and redesigned for sketch interface\nBlackprint.Sketch.registerInterface('BPIC/Multimedia/Audio/Input/Microphone',\nclass MicrophoneIFace extends Context.IFace.Microphone {\n\tconstructor(node){\n\t\tsuper(node);\n\t}\n\n\t// When the HTML was attached on DOM tree\n\tinit(){\n\t\tsuper.init();\n\t}\n\n\t// When the element was cloned\n\tinitClone(){\n\t\tthis.init();\n\t}\n\n\t// Event listener for 'selected'\n\t// View data to model only (user interact with the HTML)\n\tv2m$selected(now){\n\t\tthis.select(now);\n\t}\n\n\t// After HTML have reloaded\n\t// hotReloadedHTML(){}\n\n\t// When reloading have been completed\n\thotReloaded(){\n\t\tthis.init();\n\t}\n\n\thotReload(){\n\t\t// When reloading process\n\t}\n});"]}